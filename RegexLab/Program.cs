using System.IO;
using System.Text.RegularExpressions;

namespace Регулярные
{
    class Program
    {
        static void Main(string[] args)
        {
            // Путь к файлу с входным текстом. (прим. Для корректной работы нужно поменять строку пути к файлу.)
            string pathBefore = @"Before.txt";

            // Путь к файлу с выходным текстом. (после форматирования)
            string pathAfter = @"After.txt";

            // Читаем символы из файла в качестве одной строки
            string text = File.ReadAllText(pathBefore);

            /*
             * Пояснение к регулярному выражению:
               0?[469]|11                — Месяцы, в которых 30 дней
               0?[1-9]|[12]\d|30         — Дни, принадлежащие 30-дневным месяцам и зафиксированные до 30
               0?[13578]|1[02]           — Месяцы, в которых 31 день
               0?[1-9]|[12]\d|3[01]      — Дни, принадлежащие 31-дневным месяцам и зафиксированные до 31
               0?[1-9]|1\d|2[0-8]        — Дни, зафиксированные до 28 (февральные)
               [1-9]\d{3}|\d{2}          — Любой год от 1000+ (включая двучисленные формат, например 99)
               0?2/29                    — 29 февраля
               [02468][048]|[13579][26]  — Последние два числа високосных годов (которые делятся на 4)
               ?<month>, ?<day>, ?<year> — Именованные обратные ссылки (соотв. месяц, день, год) для удобства последующего форматирования
             */
            string pattern = @"\b(((?<month>0?[469]|11)/(?<day>0?[1-9]|[12]\d|30)|(?<month>0?[13578]|1[02])/(?<day>0?[1-9]|[12]\d|3[01])|0?2/(?<day>0?[1-9]|1\d|2[0-8]))/(?<year>[1-9]\d{3}|\d{2})|(?<day>0?2/29)/([1-9]\d)?([02468][048]|[13579][26]))\b";

            // Строка форматирующая совпадения в европейский формат даты
            string replacement = @"${day}/${month}/${year}";

            // Замена совпадений
            string result = Regex.Replace(text, pattern, replacement, RegexOptions.ECMAScript);

            // Запись в новый файл (прим. Название файла с отформатированным текстом - After.txt)
            File.WriteAllText(pathAfter, result);
        }
    }
}
